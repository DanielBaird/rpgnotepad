
@use "sass:color";

$participant-height: 4em;
$participant-gap: $participant-height / 5;

.encounter {
    background:#ffffff66;
    padding: 2em;

    h1 {
        padding: 0 0 1em 0;
        text-shadow: 0 0 2px #fff;
    }
}

@function faction-color($theme: 'default') {
    $color: #666;
    @if $theme == 'green' { $color: #061; }
    @if $theme == 'red'   { $color: #600; }
    @if $theme == 'brown' { $color: #311; }
    @return $color;
}

@mixin faction-theme($theme: 'default') {
    $color: faction-color($theme);
    color: $color;
    box-shadow: inset 0 0 ($participant-height / 4) scale-color($color, $alpha: 90%);

    &:hover {
        background-color: color-mix($color, #fff);
    }
}

.participant {
    line-height: 1.1;

    display: flex;
    flex-direction: row;
    justify-items: left;
    align-items: stretch;

    min-height: $participant-height;

    background-color: #fff;
    margin: 0 0 $participant-gap ($participant-height / 2);
    
    @include faction-theme();

    &.green { @include faction-theme('green'); }
    &.red   { @include faction-theme('red'); }
    &.brown { @include faction-theme('brown'); }

    > * {
        justify-content: center;
    }

    .PptAvatar {
        $font-size-factor: ($participant-height / 2em);
        color: inherit;
        background-color: currentColor;
        text-align: center;
        text-shadow: 0 0 2px 0 currentColor;
        font-size: $font-size-factor * 1em;
        line-height: (1/$font-size-factor) * $participant-height;

        height: (1/$font-size-factor) * $participant-height;
        width: (1/$font-size-factor) * $participant-height;
        border-radius: (1/$font-size-factor) * ($participant-height / 2);
        margin-left: -1 * (1/$font-size-factor) * ($participant-height / 2);

        .PptAvatarInitials {
            color: #fff;
            opacity: 0.5;
        }
    }

    .PptName {
        display: flex;
        flex-direction: column;
        justify-content: center;

        padding: 0 0.5em;

        .pre, .post {
            font-size: 80%;
        }
        .core {
            font-weight: bold;
            font-size: 120%;
        }

    }

    .PptDoneBtn {
        display: flex;
        flex-direction: column;
        color: inherit;
        background-color: currentColor;
        padding: 0 1em;
        margin: 0;
        margin-left: auto;
        float: right;
        > span {
            color: rgba(255,255,255, 0.75)
        }
    }
}

.RoundMarker {
    $font-size-factor: 1.2;
    font-size: $font-size-factor * 1em;
    $marker-height: $participant-height / $font-size-factor * 0.66;
    height: $marker-height;
    line-height: $marker-height;
    padding: 0 $marker-height * 1.5;
    margin: $participant-gap*3 0 $participant-gap;
    color: rgba(255,255,255, 1);
    text-shadow: 
    12em 0 0 rgba(255,255,255, 0.66),
    24em 0 0 rgba(255,255,255, 0.55),
    36em 0 0 rgba(255,255,255, 0.44),
    48em 0 0 rgba(255,255,255, 0.33),
    60em 0 0 rgba(255,255,255, 0.11),
    72em 0 0 rgba(255,255,255, 0.11)
    ;
    background-image: 
    linear-gradient(to right, 
        rgba(0,0,0, 0), 
        rgba(0,0,0, 0.66) $marker-height / 2,
        rgba(0,0,0, 0.75) $marker-height / 1.5,
        rgba(0,0,0, 0.75) 50%,
        rgba(0,0,0, 0.0) 50%
    ), linear-gradient(to left, 
        rgba(0,0,0, 0), 
        rgba(0,0,0, 0.66) $marker-height / 2,
        rgba(0,0,0, 0.75) $marker-height / 1.5,
        rgba(0,0,0, 0.75) 50%,
        rgba(0,0,0, 0.0) 50%
    );
    font-weight: 900;

    &.future {
        opacity: 0.5;
    }

    &:before {
        content: 'Round ';
    }
}